{% assign speed = settings.slider_interval %}
if(document.querySelector('#sort_by')!=null) {
    document.querySelector('#sort_by').addEventListener('change', function (e) {
        let url = new URL(window.location.href);
        url.searchParams.set('sort_by', e.currentTarget.value)
        window.location = url.href
    })
}

if(document.querySelector('#AddressCountryNew')!=null){
    document.getElementById('AddressCountryNew').addEventListener('change', function (e){
        //let provinces = this.options[this.selectedIndex].getAttribute('data-provinces')
        let provinces = this.options[this.selectedIndex].dataset.provinces
        let provinceSelector = document.getElementById('AddressProvinceNew')
        let provinceArray = JSON.parse(provinces) // распарсили провинции
        // console.log(provinces) // а так будет закодированая JSON строка
        if(provinceArray.length < 1){
            provinceSelector.setAttribute('disabled', 'disabled')
        }else{
            provinceSelector.removeAttribute('disabled')
        }
        provinceSelector.innerHTML = ''
        var options = ''
        for(var i = 0; i<provinceArray.length; i++ ){
            options += '<option value="'+ provinceArray[i][0] +'"> '+ provinceArray[i][0] +' </option>'
        }
        provinceSelector.innerHTML = options
    })
}
if(document.getElementById('forgotPassword')!=null){
    document.getElementById("forgotPassword").addEventListener('click', function (e){
        document.getElementById("forgot_password_form").classList.toggle('d-none')

       // const element = document.getElementById("forgot_password_form");
       // if(element.classList.contains("d-none")){
       //     element.classList.remove("d-none")
       //     element.classList.add("d-block")
       // }
    })
}

var localeItems = document.querySelectorAll("#localeItem")
if(localeItems.length > 0){
    localeItems.forEach(item =>{
        //console.log(item)
        item.addEventListener("click", event=>{
            document.getElementById("localCode").value=item.getAttribute("lang")
            document.getElementById("localization_form_tag").submit()
        })
    })
}


var myCarousel = document.querySelector('#carouselExampleControls')
var carousel = new bootstrap.Carousel(myCarousel, {
   interval: {{ speed }}*1000
})

var productModal
if(document.getElementById('productInfoModal') !=null){
    productModal = new bootstrap.Modal(document.getElementById('productInfoModal'),{})
}

var productInfoAnchor = document.querySelectorAll("#productInfoAnchor")
if(productInfoAnchor.length>0){
    productInfoAnchor.forEach((item)=>{
        item.addEventListener("click",function (event) {
            var url = '/products/' + item.getAttribute('product-handle') + '.js'
            // console.log(url) // /products/product-without-images.js
            fetch(url)
                .then((resp) => resp.json())
                .then(function (data) {
                    //console.log(data)
                    document.getElementById('productInfoImg').src = data.images[0]
                    document.getElementById('productInfoTitle').innerHTML = data.title
                    document.getElementById('productInfoPrice').innerHTML = item.getAttribute('product-price')
                    document.getElementById('productInfoDescription').innerHTML = data.description
                    var variants = data.variants;
                    var variantSelect = document.getElementById('modalItemID')
                    variantSelect.innerHTML='' // при каждом новом открытии модального окна - мы будем очищать доп. варианты опции определенного товара
                    variants.forEach(function(variant,index){
                        console.log(variant)
                        variantSelect.options[variantSelect.options.length] = new Option(variant.option1, variant.id);
                        document.getElementById('sku').innerHTML += `<div>${variant.sku}</div>`
                    })
                    productModal.show()
                });
        })
    })
}

var modalAddToCartForm = document.querySelector('#addToCartForm');
if(modalAddToCartForm !=null){
    modalAddToCartForm.addEventListener("submit", function (e) {
        e.preventDefault()
        let formData = {
            'items': [{
                'id': document.getElementById("modalItemID").value,
                'quantity':document.getElementById("modalItemQuantity").value
            }]
        };
        fetch('/cart/add.js',{
            method:'POST',
            headers:{
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then((resp) => resp.json())

            .then((data) => update_cart())

            .catch((err)=>{
                console.error('Error: ' + err)
            })
    })
}

document.addEventListener('DOMContentLoaded', function () {
    update_cart()
})

function update_cart(){
    fetch('/cart.js')
       .then((responce)=>responce.json())
       // .then((data)=>console.log(data))
       .then((data)=>document.getElementById('numberOfCartItem').innerText=data.item_count)
       //.then((data)=>document.getElementById('numberOfCartItem').innerText=data.items.length)
       .catch((err)=>console.error(err))
}
